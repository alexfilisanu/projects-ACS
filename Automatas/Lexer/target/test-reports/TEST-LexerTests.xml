<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="DESKTOP-UJFA3QJ" name="LexerTests" tests="12" errors="0" failures="2" skipped="0" time="6.885" timestamp="2022-12-11T15:03:54">
          <properties>
      <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://ubuntu.com/"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/><property name="sun.java.command" value="/home/mihaicalitescu/.cache/coursier/arc/https/github.com/sbt/sbt/releases/download/v1.6.2/sbt-1.6.2.zip/sbt/bin/sbt-launch.jar test"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2022-10-18"/><property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.17+8-post-Ubuntu-1ubuntu218.04"/><property name="user.name" value="mihaicalitescu"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/home/mihaicalitescu/.cache/JNA/temp/jna744543356797546243.tmp"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/tmp"/><property name="java.version" value="11.0.17"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/><property name="java.vendor" value="Ubuntu"/><property name="scala.ext.dirs" value="/home/mihaicalitescu/.sbt/1.0/java9-rt-ext-ubuntu_11_0_17"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="java.class.path" value="/home/mihaicalitescu/.cache/coursier/arc/https/github.com/sbt/sbt/releases/download/v1.6.2/sbt-1.6.2.zip/sbt/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Ubuntu"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/Bucharest"/><property name="os.name" value="Linux"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/home/mihaicalitescu"/><property name="user.language" value="en"/><property name="sbt.script" value="/home/mihaicalitescu/.cache/coursier/arc/https/github.com/sbt/sbt/releases/download/v1.6.2/sbt-1.6.2.zip/sbt/bin/sbt"/><property name="swoval.tmpdir" value="/home/mihaicalitescu/.sbt/1.0"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=":"/><property name="os.version" value="5.10.16.3-microsoft-standard-WSL2"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/lib64:/usr/lib:/lib:/usr/local/lib:/usr/lib/wsl/lib:/usr/lib/x86_64-linux-gnu/tls:/usr/lib/x86_64-linux-gnu/libfakeroot"/><property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-lts"/><property name="user.dir" value="/mnt/c/Users/mihai/OneDrive/Desktop/Anu 4/LFA/Proiect/mihai/solutions-scala"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="11.0.17+8-post-Ubuntu-1ubuntu218.04"/><property name="java.class.version" value="55.0"/>
    </properties>
          <testcase classname="LexerTests" name="Test lexer: simple concat (2p)" time="0.191">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: simple union (2p)" time="0.033">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: space and zeros char (5p)" time="0.03">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: space and zeros char (5p)-1" time="0.07">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: ones and twos char (8p)" time="0.083">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: plus and star char (8p)" time="0.056">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: whitespaces char (10p)" time="0.121">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: abcd diverse char (10p)" time="0.098">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: everything complex char (15p)" time="1.942">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: simple error parsing char (5p)" time="0.015">
                      <failure message="key not found: ((Set((ABC,1)),5), )" type="java.util.NoSuchElementException">java.util.NoSuchElementException: key not found: ((Set((ABC,1)),5), )
	at munit.FunSuite.assert(FunSuite.scala:11)
	at LexerTests.$anonfun$new$132(LexerTests.scala:166)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
</failure>
                    </testcase><testcase classname="LexerTests" name="Test lexer: simple error parsing char (10p)" time="0.028">
                      <failure message="/mnt/c/Users/mihai/OneDrive/Desktop/Anu 4/LFA/Proiect/mihai/solutions-scala/src/test/scala/LexerTests.scala:188 assertion failed
187:
[7m188:    assert(Lexer(spec).lex(&quot;abcbcbcaabaad dccbca&quot;) == Left(&quot;No viable alternative at character 10, line 0&quot;))[0m
189:    assert(Lexer(spec).lex(&quot;d abdbc ccddabbbc&quot;) == Left(&quot;No viable alternative at character 4, line 0&quot;))" type="munit.FailException">munit.FailException: /mnt/c/Users/mihai/OneDrive/Desktop/Anu 4/LFA/Proiect/mihai/solutions-scala/src/test/scala/LexerTests.scala:188 assertion failed
187:
[7m188:    assert(Lexer(spec).lex(&quot;abcbcbcaabaad dccbca&quot;) == Left(&quot;No viable alternative at character 10, line 0&quot;))[0m
189:    assert(Lexer(spec).lex(&quot;d abdbc ccddabbbc&quot;) == Left(&quot;No viable alternative at character 4, line 0&quot;))
	at munit.FunSuite.assert(FunSuite.scala:11)
	at LexerTests.$anonfun$new$155(LexerTests.scala:188)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
</failure>
                    </testcase><testcase classname="LexerTests" name="Test lexer: lexer for a real language (20p)" time="4.218">
                      
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>